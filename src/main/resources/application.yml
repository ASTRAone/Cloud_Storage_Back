server:
  port: ${SERVER_PORT:8080}
spring:
  application:
    name: cloud-storage
  datasource:
    url: jdbc:postgresql://${DB_POSTGRES_HOST:localhost}:${DB_POSTGRES_PORT:5433}/${DB_POSTGRES_NAME:user}
    driver-class-name: org.postgresql.Driver
    username: ${DB_POSTGRES_USERNAME:postgres}
    password: ${DB_POSTGRES_PASSWORD:postgres}
  jpa:
    open-in-view: false
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        jdbc.lob.non_contextual_creation: true
        types:
          print:
            banner: false
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${keycloak.server-url}/realms/${keycloak.realm}
          jwk-set-uri: ${spring.security.oauth2.resourceserver.jwt.issuer-uri}/protocol/openid-connect/certs
  cloud:
    aws:
      credentials:
        access-key: ${S3_ACCESS_KEY:efQ6ASj2wk3afuTWuAk7}
        secret-key: ${S3_SECRET_KEY:gA60pNBlsaY0aNHAXH86wJvHQD97bJcjkc27qNGB}
      s3:
        bucket-name: ${S3_BUCKET_NAME:bpla}
        endpoint: ${S3_URL:http://localhost:9000}
      region:
        static: ${S3_REGION:ru-1}
  servlet:
    multipart:
      max-file-size: 10MB
auth:
  public-urls: /api/v1/auth/login,/api/v1/auth/signup,/api/v1/auth/token/refresh

keycloak:
  server-url: ${KEYCLOAK_SERVER_URL:http://localhost:8989}
  realm: ${KEYCLOAK_REALM:master}
  resource: ${KEYCLOAK_RESOURCE:account}
  client: ${KEYCLOAK_CLIENT:account}
  credentials:
    secret: ${KEYCLOAK_CREDENTIALS_SECRET:HntRm0CLSaF7Jd8E4gc9vgwlH2e4yQlA}
s3:
  bucketName: ${S3_BUCKET_NAME:3a4d5c4b-d8935681-88a7-4bc0-9bc0-3304f9eceac5}
